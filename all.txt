<=============================================1=======================================>
Демка:
Каждое из логических выражений A и B зависит от одного и того же набора из 6
переменных. В таблицах истинности обоих выражений в столбцах значений стоит ровно
по 5 единиц в каждой таблице. Каково максимально возможное число единиц в столбце
значений таблицы истинности выражения A∨B¯
?
+++++++++++++++++++++++++++Мой файл:
Из демки Задание 1:
Каждое из логических выражений A и B зависит от одного и того же набора из 6
переменных. В таблицах истинности обоих выражений в столбцах значений стоит ровно
по 5 единиц в каждой таблице. Каково максимально возможное число единиц в столбце
значений таблицы истинности выражения A∨B¯ ? (Аv(неВ))

Решение:
    так как 6 переменных то столбик вниз будет 2**6=64, то есть 64 цифры:
    0
    0
    0
    0
    0
    0
    0
    .
    .
    .
    .
    .
    И таких 64 нуля
    Следующее:
        мы знаем что 5 едениц в каждой букве, то есть в В и А по пять едениц:
            А  В 
            1  1            Расспологаться они могут как угодно 
            1  1
            1  1
            1  1
            1  1
            0  0
            0  0
            0  0
            0  0
            0  .
            0  .
            0  .
            .
            .
            .
            .
        Значит чтобы получить максимальное количество едениц, то есть максимальное чтобы (Аv(неВ)) было 1, нам надо чтобы все В были 0, тогда не В это 1
        и тогда (Аv(неВ)) всегда 1, а в случаях когда в=1, то а тогда должно быть равно 1, тогда (Аv(неВ)) будет равно 1, значит во всех случаях в=0, а когда 
        в=1, то а=1 значит это можно сделать во всех 64 случаях
Ответ: 64
+++++++++++++++++++++++++++++Файл Лёши:
Задание 2_6: Решение 2 задания ЕГЭ по информатике:

Каждое логическое выражение A и B зависит от одного и того же набора из 7 переменных. В таблицах истинности каждого из этих выражений в столбце значений стоит ровно по 4 единицы.
Каково максимально возможное число единиц в столбце значений таблицы истинности выражения A ∨ B?


✍ Решение:

Полная таблица истинности для каждого из выражений A и B состоит из 27 = 128 строк.
В четырех из них результат равен единице, значит в остальных — 0.
A ∨ B истинно в том случае, когда либо A = 1 либо B = 1, или и A и B = 1.
Поскольку А = 1 только в 4 случаях, то чтобы получить максимальное количество единиц в результирующей таблице истинности (для A ∨ B), расположим все единицы т.и. для выражения A так, чтобы они были в строках, где B = 0, и наоборот, все строки, где B = 1, поставим в строки, где A = 0:
A	B
1	0
1	0
1	0
1	0
0	1
0	1
0	1
0	1
0	0
…	…
Итого получаем 8 строк.
Если бы в задании требовалось найти минимальное количество единиц, то мы бы совместили строки со значением = 1, и получили бы значение 4.
Результат: 8
<=========================================2================================================>
Демка:
Логическая функция F задаётся выражением (x→y∧z¯)∨w
. На рисунке
приведён частично заполненный фрагмент таблицы истинности функции F, содержащий
неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции F
соответствует каждая из переменных x, y, z, w.
? ? ? ? F
    1 0 0
0     1 0
1   1   0
В ответе напишите буквы x, y, z, w в том порядке, в котором идут соответствующие им
столбцы. Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не
нужно.
++++++++++++++++++++Мой файл:
print("x y z w")
for x in(0,1):
    for y in (0,1):
        for z in (0,1):
            for w in (0,1):
                if ((x<=y*(not(z)))+w)==0:
                    print(x,y,z,w)
Вывод программы:
x y z w
1 0 0 0
1 0 1 0
1 1 1 0
можно сделать вывод подобрав, что Ответ: ywxz
++++++++++++++Файл Лёши:
print("x y z w")
for x in(0,1):
    for y in (0,1):
        for z in (0,1):
            for w in (0,1):
                if ((x<=y*(not(z)))+w)==0:
                    print(x,y,z,w)
+++++++++++++++++++Just:
from itertools import *
def f(x, y, w,  z):
    return ((x <= y and (not(z))) or w) #впеисываем функцию 
for a1, a2, a3, a4, a5, a6 in product ([0,1], repeat=6): # количество а и репеат это количество пропущенных клеток
    table = [(a1, a2, 1, 0), (0, a3, a4, 1), (1, a5, 1, a6)]
    if len(table) == len(set(table)):
        for p in permutations ('xywz'):
            if [f(**dict(zip(p,r))) for r in table] == [0,0,0]: # нули это значения F
                print(*p, sep='')

<=========================================3================================================>
Демка:
Упростите логическое выражение:
(A∨B)∧((A∨B)→(A∧B))

Ответ записывать без пробелов.
Обозначения операций:
~ инверсия
* конъюнкция
+ дизъюнкция
Переменные необходимо располагать в алфавитном порядке, например, если в ответ необходимо записать конъюнкцию А и В, то необходимо записать А*В, а не В*А
++++++++++++++++++++++++РЕШЕНИЕ:
from sympy import Symbol, simplify, And, Or, Not, Implies, Equivalent

def simplify_expression(expression_str):
  """
  Упрощает логическое выражение.

  Args:
      expression_str: Строка, представляющая логическое выражение.

  Returns:
      Упрощенное выражение в виде строки.
  """
  symbols = []
  for char in expression_str:
    if char.isalpha():
      symbols.append(Symbol(char))

  expression = eval(expression_str, {s.name: s for s in symbols})  # преобразуем строку в выражение
  simplified_expression = simplify(expression)
  return str(simplified_expression)

# Пример использования
expression = "(y&~z)|(x&~y&z)" #ввод выражения
simplified = simplify_expression(expression)
print(f"Упрощенное выражение: {simplified}")
"""| Операция | Символ Python | Описание |
|---|---|---|
| И (конъюнкция) | `&` | Истинно, только если оба операнда истинны. |
| ИЛИ (дизъюнкция) | `|` | Истинно, если хотя бы один операнд истинен. |
| НЕ (отрицание) | `~` | Инвертирует значение операнда. |
| Импликация (если ... то) | `>>` | Истинно, кроме случаев, когда первый операнд истинен, а второй ложен. |
| Эквивалентность (тогда и только тогда) | `<=>` | Истинно, если оба операнда имеют одинаковое значение (истина или ложь). |"""
#пример ввода с демки задания 3: (A|B)&((A|B)>>(A&B))
#пример ввода задания 4 с демки: "(~y&x|~z&x|y&z)&(~(x&~z)|~z&y)" где x1=x x2=y x3=z
<=========================================5================================================>
СКНФ
Построение СКНФ согласно таблице истинности
Если функция равна нулю, то в случае каждого набора записывают сумму, причем с отрицанием берутся те переменные, которые равны единице.
Пример:
x  y  z  F
0  1  0  0
0  1  1  0
1  1  0  0
СКНФ будет так:
F=(X v ~Y v Z)^(X v ~Y v ~Z)^(~X v ~Y v Z)

Построение СДНФ согласно таблице истинности
Если функция соответствует единице, то в случае каждого набора записывается произведение, причем с отрицанием берутся те переменные, которые равны нулю.
Пример:
x  y  z  F
0  0  0  1
0  1  0  1
1  1  0  1
СДНФ будет так:
F=(~x ^ ~y ^ ~z)v(~x ^ y ^ ~z)v(x ^ y ^ ~z)

ВАЖНОЕ УТОЧНЕНИЕ !!!!
Условие, что функция f (x1, x2, x3) = 1 на наборах 1,3,5,6,7 записывается   f (1, 3, 5, 6, 7) = 1.
Значит что :
x  y  z  F 
0  0  0      первый набор это 0
0  0  1  1
0  1  0
0  1  1  1
1  0  0
1  0  1  1
1  1  0  1
1  1  1  1
<=========================================7================================================>
++++++++++++++Мой файл:
A=[]
for i in range(1,1000):
    k=0
    for x in range(100):
        for y in range(100):
            if ((2*y-x<i) or (x+2*y>50) or (2*x+y<40))==1:
                k+=1
    if k==10000:
        print(i)
        A.append(i)
    else:
        k=0
print(A)
"""
Укажите наименьшее целое значение А, при котором выражение
(2y–x<A)∨(x+2y>50)∨(2x+y<40)

истинно для любых целых положительных значений x и y.
"""
+++++++++++++++++++++Max:
for a in range(500):
    f = False
    for x in range(500):
        for y in range(500):
            q = 2*y - x < a
            w = x + 2*y > 50
            e = 2*x + y < 40
            if (q or w or e)==0:
                f = True
                break
        if f:
            break
    else:
        print(a)
"""
Укажите наименьшее целое значение А, при котором выражение
(2y–x<A)∨(x+2y>50)∨(2x+y<40)

истинно для любых целых положительных значений x и y.
++++++++++++++++++++++Лёша:
for i in range(1,1000):
    k=0
    for x in range(100):
        for y in range(100):
            if ((2*y-x<i) or (x+2*y>50) or (2*x+y<40))==1:
                k+=1
    if k==10000:
        print(i)
        break
    else:
        k=0
<=========================================8================================================>
Демка:
Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наименьшего натурального числа А формула
(ДЕЛ(x,45)∧¬ДЕЛ(x,15))→¬ДЕЛ(x,A)

тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной х)?
+++++++++++++++++++++++++Лёша:
for i in range(1,1000):
    k=0
    for x in range(100):
        if(( x%45==0 and (not(x%15==0)))<=(not(i)))==1:
            print(i)
            k=1
            break
    if k==1:
        break
+++++++++++++++++++++++Мой файл:
"""Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на натуральное число m». Для какого наименьшего натурального числа А формула
(ДЕЛ(x,45)∧¬ДЕЛ(x,15))→¬ДЕЛ(x,A)

тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной х)?"""

#alex
for i in range(1,1000):
    k=0
    for x in range(100):
        if(( x%45==0 and (not(x%15==0)))<=(not(i)))==1:
            k+=1
    if k==100:
        print(i)
        break

#условия для нижних двух:
"""
Обозначим через ДЕЛ(n, m) утверждение "натуральное число n делится без остатка на
натуральное число m". Для какого наименьшего натурального числа А формула
(ДЕЛ(x,А)∧ДЕЛ(x,12))→(ДЕЛ(x,42)∨¬ДЕЛ(x,12))  

тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x)?."""
#я делал
for a in range(1,1000):
    k=0
    for x in range(0,500):
        q = x%a == 0
        w = x%12 == 0
        e = x%42 == 0
        if ((q and w)<= (e or not(w))) == 1:
            k+=1
    if k==500:
        print(a)
#max
for a in range(1,500):
    for x in range(1,500):
        q = x%a == 0
        w = x%12 == 0
        e = x%42 == 0
        if ((q and w)<= (e or not(w))) == 0:
            break
    else:
        print(a)
<=========================================10================================================>
демка: Определите наименьшее натуральное число A, такое что выражение
(x&55=0)∨(x&10≠0)∨(x&A≠0)

тождественно истинно (то есть принимает значение 1 при любом натуральном значении переменной x)?
+++++++++++++++++++++++++++++++Лёша:
for A in range(1,1000):
    k=0
    for x in range(100):
        if (x&55==0)or(x&10!=0)or(x&A!=0):
            k+=1
    if k==100:
        print(A)
        break
<=========================================12================================================>
Демка: Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен. При опущенном хвосте Черепаха оставляет на поле след в виде линии. В каждый конкретный момент известно положение исполнителя и направление его движения. 
У исполнителя существует две команды: 
Вперёд n (где n – целое число), вызывающая передвижение Черепахи на n единиц в том направлении, куда указывает её голова, 
и Направо m (где m – целое число), вызывающая изменение направления движения на m градусов по часовой стрелке.
Повтори k [Команда1 Команда2 … КомандаS] означает, что последовательность из S команд повторится k раз. 
Черепахе был дан для исполнения следующий алгоритм:

Повтори 10 [Вперёд 6 Направо 120]

Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.
++++++++Лёша: 
import turtle as t # Подключим модуль черепашка
k = 20 # коэффициент для настраивания более удобного масштаба
t.left(90)
t.speed(5)
for i in range(10): # пропишем алгоритм построения фигуры по условию
    t.forward(6 * k)
    t.right(120)
t.up()
t.speed(1000) # Увеличим скорость черепашки
for x in range(-10, 15): # Алгоритм построения точек
    for y in range(0, 20):
        t.goto(x * k, y * k)
        t.dot(3) # точки размером 4 пикселя
t.done()
+++++++++++мой файл:
использовать Черепаха
опустить хвост
алг
нач
нц 10 раз
вперед(6)
вправо(120)

кц
кон
<=========================================13================================================>
Исполнитель Чертёжник перемещается на координатной плоскости, оставляя след в виде линии. Чертёжник может выполнять команду сместиться на (a, b), где a, b – целые числа. Эта команда перемещает Чертёжника из точки с координатами (x, y) в точку с координатами (x + a; y + b). 
Например, если Чертёжник находится в точке с координатами (4, 2), то команда сместиться на (2, −3) переместит Чертёжника в точку (6, −1). 

Цикл ПОВТОРИ число РАЗ
    последовательность команд
КОНЕЦ ПОВТОРИ

означает, что последовательность команд будет выполнена указанное число раз (число должно быть натуральным). Чертёжнику был дан для исполнения следующий алгоритм:
ПОВТОРИ 15 РАЗ
    сместиться на (10, 10)
    сместиться на (3, -6)
    сместиться на (-9, 3)
КОНЕЦ ПОВТОРИ
Определите, сколько точек с целочисленными координатами окажутся строго внутри замкнутых треугольных областей, образованных линией, оставленной Чертёжником, если исполнитель стартует в точке с целочисленными координатами.
++++++++++++код:
использовать Чертежник
алг
нач
нц 15 раз
опустить перо
сместиться на вектор(10,10)
сместиться на вектор(3,-6)
сместиться на вектор(-9,3)
кц
кон
<=========================================14================================================>
Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.
А) заменить (v, w). Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды заменить (111, 27) преобразует строку 05111150 в строку 0527150. Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку. 

Б) нашлось (v). Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется. 

Дана программа для Редактора: 

НАЧАЛО ПОКА НЕ нашлось (00) 

    ЕСЛИ нашлось (011) ТО 

        заменить (011, 101) 

    ИНАЧЕ 

        заменить (01, 40) 

        заменить (02, 20) 

        заменить (0222, 1401) 

    КОНЕЦ ЕСЛИ 

КОНЕЦ ПОКА КОНЕЦ 

Известно, что исходная строка A содержала ровно два нуля – на первом и на последнем месте, а также поровну единиц и двоек. После выполнения данной программы получилась строка B, содержащая 6 единиц и 9 двоек. Какое наименьшее количество четвёрок может быть в строке B?
++++++++++++++Лёши:
from random import shuffle
a = []
for i in range (1,100):
    for j in range (0,1000):
        s = list('1'*i+'2'*i)  #поровну единиц и двоек
        shuffle(s)
        s = '0'+''.join(s)+'0' #переделываем из массива(list) в строку и добавляем нули с начала и конца
        while not '00' in s:
            if '011' in s:
                s = s.replace('011','101',1)
            else:
                s = s.replace('01', '40', 1)
                s = s.replace('02', '20', 1)
                s = s.replace('0222', '1401', 1)
        if s.count('1') == 6 and s.count('2') == 9:
            a.append(s.count('4'))
print(min(a))
<=========================================15================================================>
По заданной квадратной матрице n×n из нулей и единиц определите, может ли данная матрица быть матрицей смежности простого неориентированного графа.

Входные данные
На вход программы поступает число n размер матрицы, а затем n строк по n чисел, каждое из которых равно 0 или 1, – сама матрица.

Выходные данные
Выведите  «YES», если приведенная матрица может быть матрицей смежности простого неориентированного графа, и «NO» в противном случае.

Примеры
входные данные
5
0 0 1 0 0 
0 0 1 0 1 
1 1 0 0 0 
0 0 0 0 0 
0 1 0 0 0 
выходные данные
YES
Мой код:
def f(n, m):
  for i in range(n):
    if m[i][i] == 1:
      return "NO"
  for i in range(n):
    for j in range(i + 1, n): #или просто поставить n
      if m[i][j] != m[j][i]:
        return "NO"

  return "YES"
n = int(input())
m = []
for i in range(n):
  row = list(map(int, input().split()))
  m.append(row)
print(f(n, m))
<=========================================16================================================>
В метании молота состязается n спортcменов. Каждый из них сделал m бросков. Победителем считается тот спортсмен, у которого сумма результатов по всем броскам максимальна.
Если перенумеровать спортсменов числами от 0 до n-1, а попытки каждого из них – от 0 до m-1, то на вход программа получает массив a[n][m], состоящий из неотрицательных целых чисел. Программа должна определить максимальную сумму чисел в одной строке и вывести на экран эту сумму и номер строки, для которой достигается эта сумма.

Входные данные
Программа получает на вход два числа n и m, являющиеся числом строк и столбцов в массиве. Далее во входном потоке идет n строк по m чисел, являющихся элементами массива.

Выходные данные
Программа должна вывести  2 числа: сумму и номер строки, для которой эта сумма достигается. Если таких строк несколько, то выводится номер наименьшей из них. Не забудьте, что нумерация строк (спортсменов) начинается с 0.
+++++++++++++++++++++++++код Лёши:
n,m=map(int,input().split())
a=[list(map(int,input().split()))for i in range(n)]
d=[]
for i in range(n):
    d.append(sum(a[i]))
print(max(d))
print(d.index(max(d))+1)
<=========================================17================================================>